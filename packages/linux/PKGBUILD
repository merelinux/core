#!/bin/bash
# shellcheck disable=SC2034,SC2154,SC2068

pkgname=(linux linux-headers)
pkgver=6.1.79
pkgrel=1
pkgdesc='System kernel'
arch=(aarch64 x86_64)
url='http://www.kernel.org'
license=(GPL2)
depends=()
makedepends=(
    bison
    flex
    libelf-dev
    openssl-dev
    perl
    python
    rsync
    zlib-ng-dev
)
options=()
changelog=ChangeLog
source=(
    "https://cdn.kernel.org/pub/linux/kernel/v6.x/linux-$pkgver.tar.xz"
    linux-x86_64-config
    linux-aarch64-config
    busybox-find-compat.patch
)

sha256sums=(
    faa49ca22fb55ed4d5ca2a55e07dd10e4e171cfc3b92568a631453cd2068b39b
    1bf2589c7f42acde43c0e3f3a63a73f24815e27f75f99dbcb9250a877b7ed90f
    42b18c0afad2a71b31ebc052f1254f32dc998c9163ae90d903c21590ca0f706c
    c8f3271471fd3c9b576fca983511da87f2f9c14dbc1e6eb1573fe98a771b0481
)

build() {
    cd_unpacked_src
    sed -i 's@/usr/bin/awk@/bin/awk@' scripts/ld-version.sh
    sed -i \
        -e "/^CC/s@gcc@${CC:-cc}@g" \
        -e "/^HOSTCC/s@gcc@${CC:-cc}@g" Makefile
    # Some internal build scripts expect the GNU find command.
    # Specifically, they expect find will have the -printf flag.
    patch -Np1 -i "${srcdir}/busybox-find-compat.patch"
    make LLVM=1 LLVM_IAS=1 mrproper
    cp "${srcdir}/linux-$(arch)-config" .config
    make LLVM=1 LLVM_IAS=1 -j "$(nproc)"
}

package_linux() {
    groups=(base)
    cd_unpacked_src
    make LLVM=1 LLVM_IAS=1 INSTALL_MOD_PATH="$pkgdir" modules_install
    case $(arch) in
        x86_64)  ARCH=x86_64 IMAGE=bzImage ;;
        aarch64) ARCH=arm64  IMAGE=Image   ;;
    esac
    install -d "${pkgdir}/boot"
    install "arch/${ARCH}/boot/${IMAGE}" "${pkgdir}/boot/vmlinux"
    install .config "${pkgdir}/boot/config"
    # remove build/source links for now
    rm -f "${pkgdir}/lib/modules/${pkgver}/build" \
          "${pkgdir}/lib/modules/${pkgver}/source"
}

package_linux-headers() {
    groups=(build-base)
    cd_unpacked_src
    make LLVM=1 LLVM_IAS=1 INSTALL_HDR_PATH=dest HOSTCFLAGS="-D_GNU_SOURCE" headers_install
    set -o pipefail
    find usr -not -type d -name "*.h" | cpio -dump "${pkgdir}"
}
